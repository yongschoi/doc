----- Stream 이란
      Collection(Array 포함)을 람다식으로 처리할 수 있는 반복자
      (코딩 간소화, 가독성 향상 관점으로 적용하는 것이 좋다.
      배치성 데이터를 조작하면 몰라도 일반 데이터 stream 성능은 글쎄??)

      int result = list.stream()      // 스트림 생성
                       .filter( ... ) // 중간 연산자
                       .map( ... )    // 중간 연산자
                       .count();      // 최종 연산자

      Stream = Collection.stream().중간연산().최종연산();

----- Create Operations(생성연산)
      . Arrays.stream()
      . Collections.stream()

----- Intermediate Operations(중간연산)
      . filter(a -> a.contains("o")) // stream 필터
      . map(a -> a.concat("s")) // stream 조작
      . sorted() // 정렬
      . limit(3) // stream의 개수를 3개로 제한. stream 무한생성을 방지용.
      . distinct() // 중복제거
      . skip(3) // 처음 3개요소 제외
      . mapToXXX // stream을 XXX 타입으로 변경 mapToInt() "1","2","3" -> 1,2,3

----- Terminal Operations(최종연산)
      . count(), min(), max(), sum(), average()
      . reduce() // 값 누적
      . collect() // stream -> collection
      . noneMatch, anyMatch, allMatch // return boolean

----- Stream은 재사용이 불가능하다. 즉, 1회용이다.

----- Collection.forEach() Vs. Collection.stream.forEach()
      Collection.forEach()는 순서가 정의되지만,
      Collection.stream.forEach()는 순서가 정의되지 않는다.

----- 성능비교 : for-each > Collection.stream().forEach() > Collection.forEach()
      단순 loop인 경우
      1. for-each(Outer Iteration)가 가장 빠르고
      for(SomeObject obj : someObjects) {
        // TODO
      }

      2. 그다음 stream().forEach()

      3. 람다 style(Internal Iteration)는 현저히 느림
      someObjects.forEach(obj -> {
        // TODO
      }
 
----- Collection연산과 Stream의 성능비교
      <Collection>
      for (String name : names) {
        if (name.contains("o")) {
          count++;
        }
      }
      <Stream>
      count = names.stream().filter(x -> x.contains("o")).count();

      약 4천만건을 위와같이 단순 조건(for/if 1회)에서는 Collection연산이 빠름.
      그러나, for문이 1회 이상이 되던가 4천만건 이상의 Collection을 처리하게 될 경우
      Stream연산이 더 성능이 좋다.

----- Collection.stream() Vs. Collection.parallelStream()
      parallelStream는 내부적으로 멀티 thread로 병렬처리한다.
      인프라 스펙에 따라 성능상 효과가 있을 수 있다.(but, 마이너스 효과가 생길수도 있다.)
