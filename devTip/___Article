Netflix의 마이크로 서비스 아키텍처에 대한 설계 분석

1. Introduction
Netflix는 수년간 전 세계 최고의 온라인 구독 기반 비디오 스트리밍 서비스 중 하나였으며, 전 세계 인터넷 대역폭 용량의 15% 이상을 차지했습니다. 2019년에 Netflix는 이미 1억 6,700만명 이상의 가입자를 확보했으며, 분기마다 5백만명 이상의 신규 가입자가 추가되었으며 200개 이상의 국가에서 운영되고 있습니다. 보다 구체적으로 Netflix의 구독자는 1억 6천 5백만 시간 이상을 매일 4,000편 이상의 영화와 47,000편의 에피소드(TV시리즈)를 시청하는 데 보냅니다.
이러한 인상적인 통계는 엔지니어링 관점에서 Netflix 기술팀이 전 세계 고객에게 서비스를 제공하기 위해 가용성과 확장성이 매우 뛰어난 놀라운 비디오 스트리밍 시스템을 설계했음을 보여줍니다.

그러나 기술 팀은 현재 IT시스템을 갖추는 데 8년이 걸렸습니다. 실제로 Netflix의 인프라 혁신은 자체 데이터 센터의 서비스 중단으로 3일 동안 전체 DVD 임대 서비스가 중단 된 후 2008년 8월에 시작되었습니다. Netflix는 장애 지점이 없는 보다 안정적인 인프라가 필요하다는 것을 깨달았습니다.
따라서 IT인프라를 데이터 센터에서 퍼블릭 클라우드로 마이그레이션하고 마이크로 서비스 아키텍처를 통해 레거시(monolithic) 프로그램을 관리 가능한 작은 소프트웨어 구성 요소로 대체하는 두 가지 중요한 결정을 내렸습니다. 이 두결정이 오늘날 Netflix의 성공에 직접적인 영향을 미쳤습니다.

AWS는 전 세계에 안정적인 데이터베이스, 대규모 클라우드 스토리지 및 여러 데이터 센터를 제공할 수 있기 때문에 IT인프라를 마이그레이션하기 위해 Netflix가 AWS 클라우드를 선택했습니다. Netflix는 AWS에서 구축 및 유지 관리하는 클라우드 인프라를 활용함으로써 데이터 센터 구축에 힘을 쏟지 않고 고품질 비디오 스트리밍 사용자 경험을 제공하는 핵심 비즈니스에 더 집중했습니다. 심지어 AWS 클라우드에서 원활하게 실행되도록 전체 기술을 재구성하여 Netflix의 확장성과 서비스 가용성이 대폭 향상되었습니다.

마이크로 서비스 아키텍처는 Netflix의 첫번째 주요 도전과제 중 하나입니다. Microservices는 자체적으로 데이터 캡슐화를 통해 모듈화하여 큰 프로그램을 더 작은 소프트웨어 구성 요소로 나누는 것을 목표로 합니다. 마이크로 서비스는 수평적 확장 및 워크로드 파티셔닝을 통해 확장성을 높이는 데 도움이 됩니다. Netflix 엔지니어는 마이크로 서비스를 채택하여 모든 서비스를 쉽게 변경하여 더 빠른 배치로 이어집니다. 더 중요한 것은 각 서비스의 성능을 추적하고 다른 서비스에서 발생한 문제를 신속하게 분리 할 수 있다는 것입니다.

이 연구에서는 Netflix의 클라우드 아키텍처와 다양한 워크로드 및 네트워크 제한에 따른 성능을 이해하는 데 관심이 있습니다. 특히 가용성, 대기 시간, 확장성 및 네트워크 장애 또는 시스템 중단에 대한 복원력 측면에서 시스템 설계를 분석하고 싶습니다. 본 연구는 다음과 같이 구성되어 있습니다. 섹션 2에서는 다양한 온라인 소스에서 배운 Netflix 시스템 아키텍처에 대해 설명합니다. 섹션 3에서는 보다 자세한 시스템 구성 요소에 대해 설명합니다. 섹션 4, 5, 6, 7 에서는 설계 목표와 관련하여 시스템을 분석하겠습니다. 마지막으로, 나는 이 분석을 통해서 배운것과 개선을 위한 다음단계에 대해 결론을 내고자 합니다.

2. Architecture
Netflix는 AWS(Amazon cloud computing services) 및 Open Connect(사내 컨텐츠 전송 네트워크)를 기반으로 운영됩니다. 전 세계적으로 고품질 비디오 스트리밍 서비스를 제공하기 위해 두 시스템 모두 원활하게 작동해야합니다. 소프트웨어 아키텍처 관점에서 Netflix는 클라이언트, 백엔드 및 CDN (Content Delivery Network)의 세 가지 주요 부분으로 구성됩니다.

-------------------------------------------------------------------

어떤 프로그램밍 언어를 사용하는 개발자가 가장 행복할까 ?

IT 분야에는 "PHP는 최악의 언어" "또는 "파이썬은 초보자를 위한 것" "과 같은 많은 고정 관념이 있습니다. 과연 그럴까? github과 개발자 설문 조사 데이터를 사용하여 진실을 찾아 보겠습니다.

- 데이터 수집
Github는 모든 개발자에게 친숙한 플랫폼입니다. 버전 관리 도구로 사용될뿐만 아니라 리포지토리 및 프로젝트 통계, 사용자 프로필 데이터 및 주석을 수집 할 수도 있습니다. 또한 연령, 성별 및 프로필 사진에 대한 정보에도 액세스 할 수 있습니다. Microsoft Face API는 해당 작업에 적합한 도구입니다.
Github는 가장 인기있는 25개의 리포지토리 목록을 제공하고 상위 5명의 기고자를 표시합니다. 내가 사용할 Eigencoder 앱은 각 저장소에서 30–80개의 프로필 사진을 감지하고 분석합니다.

- 성별
Face API는 얼굴 구조에서 성별을 감지하는 기능이 있습니다. 여기서 결과는 상당히 일방적입니다. 여성은 작은 비중을 나타내고 있습니다.


- 연령
나이 측정법은 흥미로운 것으로 판명되었습니다. 오래된 언어일수록 연령이 높은 프로그래머가 사용하는 것으로 짐작됬지만 Java는 가장 어린 개발자들에 의해 사용되고 있습니다.

- 행복정도
모든 프로그래머는 자신이 싫어하는 언어를 사용하기 때문에 프로필 사진에서 조차 웃을 수도 없습니다. Face API는 0에서 1 사이의 값을 사용하여 웃는 양을 측정합니다.
R 개발자가 가장 행복하고 Go, C # 및 Python이 그 뒤를 잇는 것처럼 보입니다. 반면에 Java 개발자는 자신의 기술을 즐기는 것 같지 않습니다.

각 언어 하위 개발자들의 댓글의 단어를 분석한 결과는 어떨까 ?

- 행복정도
Clojure, Lisp 및 Scala 개발자가 가장 긍정적입니다.

- 악성댓글
PHP 커뮤니티에서 가장 욕설을 듣게 될 것입니다. 두 번째로는 Javascript이고 그 다음으로 3위는 Java입니다. 수학적 언어 개발자가 가장 부드럽습니다.

- CodinGame 2020 개발자 설문 조사
각 산업 분야의 개발자들의 행복 수준을 살펴 보겠습니다. 코딩 설문 조사에 따르면 TOP 3은 다음과 같습니다.

1. 데이터 전문가 / 머쉰러닝 전문가
2. 게임 개발자 / 엔지니어
3. 개발자 강사 및 학술 연구원

- 마무리
데이터 분석은 매우 과학적인 결과는 아니지만 어느 정도의 통찰력을 제공 할 수 있습니다.
PHP, Html 및 R과 같은 언어는 주로 여성, C 및 C ++에 의해 사용되며 거의 대부분 남성에 의해 사용됩니다.
C ++ 언어는 가장 오래된 개발자이며 Java는 가장 어린 개발자입니다.
그리고 가장 행복한 것은 R, Go, C # 및 Python을 사용하는 사람들입니다.

그러나 당신이 직업에서 찾은 전체의 행복과 의미는 삶의 방향 및 목표에 달려 있습니다. 누군가는 기계 학습 산업에서 번창 할 수 있고 다른 사람들은 참신한 게임 개발을 선호합니다.
