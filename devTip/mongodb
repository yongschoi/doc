----- docker auth 기동
      docker run -p 27017:27017 \
       -v /etc/localtime:/etc/localtime:ro \
       -e TZ=Asia/Seoul \
       -v /home/yongschoi/docker/data/mongo:/data/db  \
       -d --rm --name mongo-db --network=YONGS-NET \
       mongo --auth # --auth 설정으로 기동 

----- mongodb 최초접속
      docker exec -it mongo-db mongo admin

----- admin 계정생성
      db.createUser(
        {
          user:'admin',
          pwd:'!admin#',
          roles:[
            {
              role: "userAdminAnyDatabase",
              db: "admin"
            }
          ]
        }
      )

----- admin 계정으로 접속
      docker exec -it mongo-db mongo -u admin -p '!admin#' --authenticationDatabase admin

----- 사용자 계정생성 with roles
      db.createUser(
        {
          user: "scott",
          pwd: "tiger",
          roles: [
            {
              role: "readWrite",
              db: "flex"
            },
            {
              role: "readWrite",
              db: "evc"
            }
          ]
        }
      )

----- 사용자 계정으로 접속
      docker exec -it mongo-db mongo -u scott -p tiger

----- spring mongodb 설정
      spring:
        data:
          mongodb:
            authentication-database: admin #이 설정이 없으면 --auth fail
            username: scott
            password: tiger
            host: localhost
            port: 27017
            database: evc

----- 데이터베이스 목록조회
      > show dbs

----- 데이터베이스 접속(생성) 및 확인
      > use 데이터베스명
      > db

----- collections 목록조회
      > show collections

----- document 조회
      > db.collecton명.find()

----- collection 삭제
      > db.collecton명.drop()

----- Max number of threads (maxWaitQueueSize) of 500 has been exceeded
      대량 데이타 Reactive 입력시 발생할 수 있으며, waitQueueMultiple 값을 튜닝해야함.
      예) mongodb://127.0.0.1:27017/flex?waitQueueMultiple=50

----- 배치 Application에서 필드 연산
       $where:'parseInt(this._id)%10==1' 과 같은 필드연산은 매우 비용이 높음.
       partition을 위한 필드를 추가하는 것이 성능상 이점이 있음
